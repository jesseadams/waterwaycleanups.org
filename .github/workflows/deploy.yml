name: Deploy Hugo Website

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "15 6 * * *" 

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::767072126027:role/github-actions-oidc
          aws-region: us-east-1
          role-session-name: github-actions

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Create Terraform state resources
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          # Temporarily move backend.tf to disable it
          if [ -f "backend.tf" ]; then
            mv backend.tf backend.tf.bak
          fi
          
          # Initialize without backend and create state resources
          terraform init
          terraform apply -auto-approve -target=aws_s3_bucket.terraform_state -target=aws_s3_bucket_versioning.terraform_state_versioning -target=aws_s3_bucket_server_side_encryption_configuration.terraform_state_encryption -target=aws_s3_bucket_public_access_block.terraform_state_public_access_block -target=aws_dynamodb_table.terraform_locks
          
          # Restore backend.tf
          if [ -f "backend.tf.bak" ]; then
            mv backend.tf.bak backend.tf
          fi
      
      - name: Terraform Init with S3 Backend
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform init -force-copy
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build assets (Tailwind CSS and Webpack)
        run: npm run build:css && npm run build:assets

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.147.1"
          extended: true

      - name: Build Hugo site
        run: hugo --minify

      - name: Deploy to S3
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 sync public/ s3://${{ secrets.S3_BUCKET_NAME }}/

      - name: Invalidate CloudFront Cache
        if: github.ref == 'refs/heads/main'
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
      
      - name: Slack Notification
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
